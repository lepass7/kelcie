bool wifiConnect(uint8_t attempts);                                                           //will try to connect the device on wifi
String print_reset_reason(RESET_REASON reason);
void setupAsynchServer();
void notFound(AsyncWebServerRequest *request);
void serialPrint(bool enableSerial, int msgType, String printMsg);            //prints to serial based on function's input
void initializeKelcie();
void searchTemperatureSensor(int attempts);
void smartConfig();
int externalTemperature();
void defineSprites();
void initializeBlynk();
void drawDefaultScreen(int screenID);
void drawWiFiSignal();
void drawSignalCircles(long rssi);
void drawCirclePoints(int r);
void drawButtonsNavigation();
bool configurationMenu();
//void showConfigurationMenu();
void setAuthToken();
String readFile(fs::FS &fs, const char * path);
int writeFile(fs::FS &fs, const char * path, String message);//const char * message);
String printLocalTime();
void drawTime();
void handleButtons();
void checkWifiInTheLoop();
void updateTemperatureInTheLoop();
void loopInTime();
void handleBlynk();
void calculateConsumption(int minutes);
void configureIO();
void overCurrentDetected();
void IRAM_ATTR onTimer();
void deactivateHeater();
void initVariables();
//void clearUnusedMemory();
//void drawConsumption();
void setWifiManually();
String userInputString(String menuName);
void deleteMonthsInFlash();
void buttonAPressed();
void buttonBPressed();
void buttonCPressed();
bool checkInternetConnectivity();
void configureM5Keyboard();
void removeWifiCredentials();
void showSettings();
void navigationButtons(String btnA, String btnB, String btnC, uint16_t backgroundColor, uint16_t textColor);
void printHeader(String str);
String rssiToPercent(String rssi);
void printMsg(String msg, String subMsg, int type, int delayms);
void showMainMenu();
int printArray(String *myArray, String menuName, int arrayLength);
void menuActionSelected(int firstLevelMenu, int secondLevelMenu);
void checkForUpdates();
void firstTimeSetUp(bool firstTime);
void resetToFactorySettings();
//void playShowerReadySound();
int isBlynkTokenValid(String token);
//void rstOverCurrentDetection();
